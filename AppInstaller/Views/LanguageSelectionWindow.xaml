<Window x:Class="AppInstaller.Views.LanguageSelectionWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:converters="clr-namespace:AppInstaller.Converters"
        xmlns:winex="https://github.com/yariker/WindowExtras.Wpf"
        WindowStyle="None" BorderThickness="1" AllowsTransparency="True"
        mc:Ignorable="d" WindowStartupLocation="CenterScreen"
        Height="159" Width="287"
        Background="{DynamicResource WindowBackgroundBrush}"
        MouseLeftButtonDown="Window_MouseDown">
    <winex:WindowEx.WindowShadow>
        <winex:WindowShadow CornerRadius="10" OffsetX="0" OffsetY="4" Opacity="0.25" Radius="10"
                            ShadowBrush="#FF000000" />
    </winex:WindowEx.WindowShadow>
    <Window.Template>
        <ControlTemplate TargetType="{x:Type Window}">
            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                <ContentPresenter />
            </Border>
        </ControlTemplate>
    </Window.Template>

    <Window.Resources>
        <!-- Определяем стиль для ToggleButton, используемого в ComboBox -->
        <converters:ChevronIconConverter x:Key="ChevronIconConverter" />
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
            <Border Background="Transparent"
                    BorderBrush="Transparent"
                    BorderThickness="0"
                    Padding="5">
                <materialDesign:PackIcon
                    Kind="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ChevronIconConverter}}"
                    Width="20" Height="20"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Foreground="{DynamicResource TextBrush}" />
            </Border>
        </ControlTemplate>

        <!-- Определяем стиль для TextBox, используемого в ComboBox -->
        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
            <Border Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" />
        </ControlTemplate>

        <!-- Стиль для ComboBox -->
        <Style x:Key="CustomComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <!-- Контент ComboBox -->
                            <ContentPresenter Name="ContentSite"
                                              IsHitTestVisible="False"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              Margin="3,3,23,3"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left" />

                            <!-- ToggleButton для открытия выпадающего списка -->
                            <ToggleButton Grid.Column="1"
                                          Name="ToggleButton"
                                          Template="{StaticResource ComboBoxToggleButton}"
                                          Focusable="false"
                                          IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                          ClickMode="Press" />

                            <!-- TextBox для редактируемого ComboBox (скрыт по умолчанию) -->
                            <TextBox Name="PART_EditableTextBox"
                                     Style="{x:Null}" FontFamily="/Resources/#Inter"
                                     Template="{StaticResource ComboBoxTextBox}"
                                     HorizontalAlignment="Left"
                                     VerticalAlignment="Center"
                                     Margin="3,3,23,3"
                                     Focusable="True"
                                     Background="Transparent"
                                     Visibility="Hidden"
                                     IsReadOnly="{TemplateBinding IsReadOnly}" />

                            <!-- Линия под выбранным элементом -->
                            <Border BorderBrush="{DynamicResource LineBrush}" BorderThickness="0,0,0,1"
                                    Grid.ColumnSpan="2" Width="225"
                                    VerticalAlignment="Bottom" Margin="3,0,3,0" />

                            <!-- Popup для выпадающего списка -->
                            <Popup Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   PopupAnimation="Slide">
                                <Grid Name="DropDown"
                                      SnapsToDevicePixels="True"
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder"
                                            Background="{DynamicResource ComboBoxBackgroundBrush}"
                                            BorderBrush="Transparent"
                                            BorderThickness="0"
                                            Padding="0"> <!-- Убираем отступы -->
                                        <ScrollViewer Margin="0,0,0,0" SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True"
                                                        KeyboardNavigation.DirectionalNavigation="Contained" />
                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Padding" Value="4" />
            <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
            <Setter Property="Background" Value="{DynamicResource ComboBoxBackgroundBrush}" />
            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
            <Setter Property="BorderThickness" Value="1" />
        </Style>


        <!-- Стиль для ComboBoxItem -->
        <Style x:Key="CustomComboBoxItemStyle" TargetType="ComboBoxItem">
            <Setter Property="Background" Value="{DynamicResource ComboBoxBackgroundBrush}" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Width" Value="225" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Padding" Value="10,7, 0, 6" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border Name="Border"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="True">
                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Изменение фона и текста при наведении -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background"
                                        Value="{DynamicResource MouseOverBrush}" />
                                <Setter Property="Foreground" Value="{DynamicResource SelectedTextBrush}" />
                            </Trigger>

                            <!-- Изменение фона и текста при выборе -->
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background"
                                        Value="{DynamicResource SelectedBackgroundBrush}" />
                                <Setter Property="Foreground" Value="{DynamicResource SelectedTextBrush}" />
                            </Trigger>

                            <!-- Цвет текста при отключении элемента -->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource DisabledTextBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid Margin="0">
        <StackPanel>
            <TextBlock x:Name="LanguageTextBlock" Foreground="{DynamicResource TextBrush}" FontSize="16"
                       Margin="30,20,30,0"
                       Text="Выберите язык установки" FontFamily="/Resources/#Inter"
                       HorizontalAlignment="Left" />
            <ComboBox Name="LanguageComboBox" SelectedIndex="0" FontSize="14" FontWeight="Regular"
                      Style="{StaticResource CustomComboBoxStyle}"
                      Padding="1,0,0,0" FontFamily="/Resources/#Inter"
                      Width="225" Margin="30,15,30,0">
                <ComboBoxItem FontFamily="/Resources/#Inter" Style="{StaticResource CustomComboBoxItemStyle}"
                              Content="Русский" Tag="ru-RU" />
                <ComboBoxItem FontFamily="/Resources/#Inter" Style="{StaticResource CustomComboBoxItemStyle}"
                              Content="English" Tag="en-US" />
            </ComboBox>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0">
                <Button Margin="0,20,0,20" Width="98" Height="30" Click="CancelButton_Click" FontWeight="Regular">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource FlatButtonExitStyle}">
                            <!-- Устанавливаем начальный фон для кнопки -->
                            <Setter Property="Background" Value="{DynamicResource ButtonBackgroundBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />

                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <!-- Меняем фон и цвет текста при наведении -->
                                    <Setter Property="Background" Value="{DynamicResource ExitBrush}" />
                                    <Setter Property="Foreground" Value="{DynamicResource ExitTextBrush}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <WrapPanel VerticalAlignment="Center" HorizontalAlignment="Left">
                        <materialDesign:PackIcon Kind="Close"
                                                 HorizontalAlignment="Left"
                                                 VerticalAlignment="Center"
                                                 Width="20" Height="20" Padding="-2,6,0,6"
                                                 Margin="-2,0,8,0" />
                        <TextBlock x:Name="CancelButtonTextBlock"
                                   Text="Закрыть" FontFamily="/Resources/#Inter"
                                   Foreground="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                                   VerticalAlignment="Center"
                                   Padding="0,4,0,4"
                                   Margin="0,0,3,0" />
                    </WrapPanel>
                </Button>
                <Button Margin="20,20,30,20" Width="76" Height="30" Click="OnOkClicked" FontWeight="Regular"
                        Style="{StaticResource FlatButtonStyle}" Background="{DynamicResource ButtonBackgroundBrush}">
                    <Grid>
                        <!-- Два столбца: текст и иконка -->
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <!-- Текст слева -->
                        <TextBlock x:Name="OkButtonTextBlock" Text="OK" Foreground="{DynamicResource TextBrush}"
                                   VerticalAlignment="Center" FontFamily="/Resources/#Inter"
                                   Grid.Column="0" Margin="0,0,6,0" />

                        <!-- Иконка справа -->
                        <materialDesign:PackIcon Kind="Check" Foreground="{DynamicResource TextBrush}" Width="20"
                                                 Height="20"
                                                 Grid.Column="1" VerticalAlignment="Center" />
                    </Grid>
                </Button>

            </StackPanel>
        </StackPanel>
    </Grid>
</Window>