<Window x:Class="AppInstaller.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AppInstaller"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:svg="http://sharpvectors.codeplex.com/svgc/"
        xmlns:res="clr-namespace:AppInstaller.Resources"
        xmlns:interactivity="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:converters="clr-namespace:AppInstaller.Converters"
        WindowStyle="None" BorderThickness="1" AllowsTransparency="True"
        mc:Ignorable="d" WindowStartupLocation="CenterScreen"
        Height="540" Width="531" Background="{DynamicResource WindowBackgroundGradient}"
        MouseLeftButtonDown="Window_MouseDown" d:DataContext="{d:DesignInstance }">
    <interactivity:Interaction.Triggers>
        <interactivity:EventTrigger EventName="Closing">
            <interactivity:InvokeCommandAction Command="{Binding CancelCommand}" />
        </interactivity:EventTrigger>
    </interactivity:Interaction.Triggers>
    <!-- Задаем фон окна с градиентом -->
    <!-- Устанавливаем кастомный шаблон для окна -->
    <Window.Template>
        <ControlTemplate TargetType="{x:Type Window}">
            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="15">
                <ContentPresenter />
            </Border>
        </ControlTemplate>
    </Window.Template>
    <Window.Resources>
        <!-- Добавляем ресурс для конвертера из bool в Visibility -->
        <converters:BooleanToHiddenVisibilityConverter x:Key="BoolToHiddenVisibilityConverter" />
        <Style TargetType="{x:Type RadioButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Ellipse Fill="{DynamicResource CheckBoxBrush}" Width="12" Height="12" />
                            <materialDesign:PackIcon Kind="Check" Width="12" Height="12"
                                                     Foreground="{DynamicResource TextBrush}"
                                                     Visibility="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, 
                                         Converter={StaticResource BoolToHiddenVisibilityConverter}}" />
                            <ContentPresenter Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,0,0" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <converters:ThemeToVisibilityConverter x:Key="ThemeToVisibilityConverter" />
    </Window.Resources>
    <!-- Основной контейнер Grid для компоновки элементов интерфейса -->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <!-- Заголовок окна "Установка" -->
        <TextBlock Foreground="{DynamicResource TextBrush}" FontSize="12" Margin="30,5,5,5"
                   Text="{x:Static res:Strings.Installation}">
        </TextBlock>
        <!-- Кнопки для закрытия окна и сворачивания -->
        <StackPanel Grid.Row="0" FlowDirection="RightToLeft" Orientation="Horizontal">
            <Button Width="50" Background="Transparent" Foreground="{DynamicResource CloseBrush}" BorderThickness="0"
                    Command="{Binding CancelCommand}">
                <materialDesign:PackIcon Kind="Close" />
            </Button>
            <Button Width="50" Background="Transparent" Foreground="{DynamicResource TextBrush}" BorderThickness="0"
                    Click="MinimizeButton_Click">
                <materialDesign:PackIcon Kind="Minus" />
            </Button>
            <Button Width="50" Background="Transparent" Foreground="{DynamicResource TextBrush}" BorderThickness="0"
                    Click="ToggleTheme" ToolTip="{x:Static res:Strings.DarkLightTheme}">
                <materialDesign:PackIcon Kind="ThemeLightDark" />
            </Button>
            <Button Name="ThemeButton" Width="50" Background="Transparent" Foreground="{DynamicResource TextBrush}"
                    BorderThickness="0" Click="ThemeButton_Click" ToolTip="{x:Static res:Strings.ChangeTheme}">
                <materialDesign:PackIcon Kind="ArrowDownDropCircleOutline" />
            </Button>
            <Popup Name="ThemePopup" PlacementTarget="{Binding ElementName=ThemeButton}" Placement="Bottom"
                   StaysOpen="False" FlowDirection="LeftToRight">
                <Border BorderThickness="0">
                    <ListBox Background="{DynamicResource WindowBackgroundGradient}">
                        <ListBoxItem>
                            <WrapPanel HorizontalAlignment="Left">
                                <RadioButton Margin="2" Name="Standard"
                                             IsChecked="True" GroupName="Theme" Checked="RadioButton_Checked" />
                                <TextBlock Margin="2" Text="Standard" Foreground="{DynamicResource TextBrush}" />
                            </WrapPanel>
                        </ListBoxItem>
                        <ListBoxItem>
                            <WrapPanel HorizontalAlignment="Left">
                                <RadioButton Margin="2" Name="Classic" GroupName="Theme" Checked="RadioButton_Checked" />
                                <TextBlock Margin="2" Text="Classic" Foreground="{DynamicResource TextBrush}" />
                            </WrapPanel>
                        </ListBoxItem>
                        <ListBoxItem
                            Visibility="{Binding Path=AppTheme, Converter={StaticResource ThemeToVisibilityConverter}, ConverterParameter=livingsamurai}">
                            <WrapPanel HorizontalAlignment="Left">
                                <RadioButton Margin="2" Name="Livingsamurai"
                                             GroupName="Theme" Checked="RadioButton_Checked" />
                                <TextBlock Margin="2" Text="livingsamurai" Foreground="{DynamicResource TextBrush}" />
                            </WrapPanel>
                        </ListBoxItem>
                        <ListBoxItem
                            Visibility="{Binding Path=AppTheme, Converter={StaticResource ThemeToVisibilityConverter}, ConverterParameter=TemplarFulga}">
                            <WrapPanel HorizontalAlignment="Left">
                                <RadioButton Margin="2" Name="TemplarFulga"
                                             GroupName="Theme" Checked="RadioButton_Checked" />
                                <TextBlock Margin="2" Text="TemplarFulga" Foreground="{DynamicResource TextBrush}" />
                            </WrapPanel>
                        </ListBoxItem>
                        <ListBoxItem
                            Visibility="{Binding Path=AppTheme, Converter={StaticResource ThemeToVisibilityConverter}, ConverterParameter=Qwerty}">
                            <WrapPanel HorizontalAlignment="Left">
                                <RadioButton Margin="2" Name="Qwerty" GroupName="Theme" Checked="RadioButton_Checked" />
                                <TextBlock Margin="2" Text="Qwerty" Foreground="{DynamicResource TextBrush}" />
                            </WrapPanel>
                        </ListBoxItem>
                        <ListBoxItem
                            Visibility="{Binding Path=AppTheme, Converter={StaticResource ThemeToVisibilityConverter}, ConverterParameter=MrMeGaBaN}">
                            <WrapPanel HorizontalAlignment="Left">
                                <RadioButton Margin="2" Name="MrMeGaBaN" GroupName="Theme"
                                             Checked="RadioButton_Checked" />
                                <TextBlock Margin="2" Text="MrMeGaBaN" Foreground="{DynamicResource TextBrush}" />
                            </WrapPanel>
                        </ListBoxItem>
                        <ListBoxItem
                            Visibility="{Binding Path=AppTheme, Converter={StaticResource ThemeToVisibilityConverter}, ConverterParameter=grustyck}">
                            <WrapPanel HorizontalAlignment="Left">
                                <RadioButton Margin="2" Name="Grustyck" GroupName="Theme" Checked="RadioButton_Checked" />
                                <TextBlock Margin="2" Text="grustyck" Foreground="{DynamicResource TextBrush}" />
                            </WrapPanel>
                        </ListBoxItem>
                        <ListBoxItem
                            Visibility="{Binding Path=AppTheme, Converter={StaticResource ThemeToVisibilityConverter}, ConverterParameter=Clave}">
                            <WrapPanel HorizontalAlignment="Left">
                                <RadioButton Margin="2" Name="Clave" GroupName="Theme" Checked="RadioButton_Checked" />
                                <TextBlock Margin="2" Text="Clave" Foreground="{DynamicResource TextBrush}" />
                            </WrapPanel>
                        </ListBoxItem>
                        <ListBoxItem
                            Visibility="{Binding Path=AppTheme, Converter={StaticResource ThemeToVisibilityConverter}, ConverterParameter=Fate}">
                            <WrapPanel HorizontalAlignment="Left">
                                <RadioButton Margin="2" Name="Fate" GroupName="Theme" Checked="RadioButton_Checked" />
                                <TextBlock Margin="2" Text="Fate" Foreground="{DynamicResource TextBrush}" />
                            </WrapPanel>
                        </ListBoxItem>
                    </ListBox>
                </Border>
            </Popup>
        </StackPanel>
        <!-- Заголовок -->
        <Grid Grid.Row="1" Margin="2,7,2,10">
            <Rectangle Width="482" Height="29" RadiusX="14.5" RadiusY="14.5">
                <!-- Фон для заголовка -->
                <Rectangle.Fill>
                    <DynamicResource ResourceKey="LeftToRightGradient" />
                </Rectangle.Fill>
            </Rectangle>
            <TextBlock Text="{Binding AppTitleDisplay}" FontWeight="700" FontStyle="Normal" FontSize="16"
                       Foreground="{DynamicResource ShadowBrush}" HorizontalAlignment="Center"
                       VerticalAlignment="Center">
                <!-- Эффект для текста (тень) -->
                <TextBlock.RenderTransform>
                    <TranslateTransform X="1" Y="1" />
                </TextBlock.RenderTransform>
            </TextBlock>
            <TextBlock Text="{Binding AppTitleDisplay}" FontWeight="700" FontStyle="Normal" FontSize="16"
                       Foreground="{DynamicResource TextBrush}" HorizontalAlignment="Center" VerticalAlignment="Center">
            </TextBlock>
        </Grid>
        <!-- Контейнер для отображения текущего View -->
        <Grid Grid.Row="2">
            <ContentControl Height="400" Width="497" Content="{Binding CurrentView}" />
        </Grid>
        <!-- Контейнер для кнопок FAQ, ссылки на Telegram и ссылки на программу в магазине -->
        <StackPanel Grid.Row="3">
            <WrapPanel Margin="50,2,2,2">
                <Button Foreground="{DynamicResource TgBrush}" BorderThickness="0"
                        Command="{Binding ShowMessageBoxCommand}"
                        Height="21" Margin="2" ToolTip="FAQ by nitokin"
                        materialDesign:ButtonAssist.CornerRadius="10" Padding="13,2,13,2"
                        Style="{StaticResource MaterialDesignRaisedDarkButton}">
                    <Button.Background>
                        <DynamicResource ResourceKey="ButtonGradient" />
                    </Button.Background>
                    <materialDesign:PackIcon Kind="FrequentlyAskedQuestions" />
                </Button>
                <Button BorderThickness="0" Command="{Binding OpenTgLinkCommand}"
                        Height="21" Margin="2" ToolTip="Nitokin Telegram"
                        materialDesign:ButtonAssist.CornerRadius="10" Padding="13,2,13,2"
                        Style="{StaticResource MaterialDesignRaisedDarkButton}">
                    <Button.Background>
                        <DynamicResource ResourceKey="ButtonGradient" />
                    </Button.Background>
                    <!-- Иконка для Telegram -->
                    <Image>
                        <Image.Source>
                            <svg:SvgImage Source="/Resources/tglogo.svg" />
                        </Image.Source>
                    </Image>
                </Button>
                <Button BorderThickness="0" Command="{Binding OpenAppPurchaseLinkCommand}"
                        Height="21" Margin="2" Padding="13,2,13,2"
                        materialDesign:ButtonAssist.CornerRadius="10" ToolTip="{x:Static res:Strings.AppLink}"
                        Style="{StaticResource MaterialDesignRaisedDarkButton}">
                    <Button.Background>
                        <DynamicResource ResourceKey="ButtonGradient" />
                    </Button.Background>
                    <Image Width="21" Source="{Binding AppPurchaseLinkLogo}" />
                </Button>
            </WrapPanel>
            <WrapPanel Margin="50,2,2,2">
                <Button BorderThickness="0" Click="PlayPause_Click" Height="21" Margin="2" Padding="13,2,13,2"
                        materialDesign:ButtonAssist.CornerRadius="10" ToolTip="{x:Static res:Strings.PlayPause}"
                        Style="{StaticResource MaterialDesignRaisedDarkButton}" Foreground="{DynamicResource TgBrush}">
                    <Button.Background>
                        <DynamicResource ResourceKey="ButtonGradient" />
                    </Button.Background>
                    <materialDesign:PackIcon x:Name="PlayIcon" Kind="Play" />
                </Button>
                <Button BorderThickness="0" Click="ResetTrack_Click" Height="21" Margin="2" Padding="13,2,13,2"
                        ToolTip="{x:Static res:Strings.PlayFromTheStart}" materialDesign:ButtonAssist.CornerRadius="10"
                        Style="{StaticResource MaterialDesignRaisedDarkButton}" Foreground="{DynamicResource TgBrush}">
                    <Button.Background>
                        <DynamicResource ResourceKey="ButtonGradient" />
                    </Button.Background>
                    <materialDesign:PackIcon Kind="Restore" />
                </Button>
                <Button BorderThickness="0" Height="21" Margin="2" Padding="15.5,2,15.5,2" ToolTip="Наш сайт"
                        materialDesign:ButtonAssist.CornerRadius="10" Command="{Binding OpenSiteLinkCommand}"
                        Style="{StaticResource MaterialDesignRaisedLightButton}">
                    <Button.Background>
                        <DynamicResource ResourceKey="ButtonGradient" />
                    </Button.Background>
                    <Image Source="/Resources/nitokin repack app icon11.ico" />
                </Button>
            </WrapPanel>
        </StackPanel>
        <!-- Контейнер для кнопок "Вперед/Установить/Завершить", "Назад" и "Отмена" -->
        <WrapPanel Margin="2,2,50,2" Grid.Row="3" FlowDirection="RightToLeft">
            <Button FontSize="10" BorderThickness="0" Command="{Binding NavigateToNextViewCommand}"
                    Height="21" Margin="2" Padding="12,2,12,2"
                    materialDesign:ButtonAssist.CornerRadius="10"
                    Style="{StaticResource MaterialDesignRaisedDarkButton}"
                    Visibility="{Binding IsNextButtonVisible, Converter={StaticResource BoolToHiddenVisibilityConverter}}">
                <Grid>
                    <TextBlock Margin="2" Text="{Binding ButtonNextText}" FontStyle="Normal" FontSize="10"
                               Foreground="{DynamicResource TextBrush}" VerticalAlignment="Center"
                               HorizontalAlignment="Center">
                        <!-- Эффект для текста (тень) -->
                        <TextBlock.Effect>
                            <DropShadowEffect ShadowDepth="1" Color="{DynamicResource ShadowColor}" Opacity="1"
                                              BlurRadius="0" Direction="225" />
                        </TextBlock.Effect>
                    </TextBlock>
                </Grid>
                <Button.Background>
                    <DynamicResource ResourceKey="ButtonGradient" />
                </Button.Background>
            </Button>
            <Button FontSize="10" BorderThickness="0" Command="{Binding CancelCommand}"
                    Height="21" Margin="2"
                    materialDesign:ButtonAssist.CornerRadius="10"
                    Style="{StaticResource MaterialDesignRaisedDarkButton}"
                    Visibility="{Binding IsCancelButtonVisible, Converter={StaticResource BoolToHiddenVisibilityConverter}}">
                <Grid>
                    <TextBlock Text="{x:Static res:Strings.Cancel}" Foreground="{DynamicResource TextBrush}">
                        <!-- Эффект для текста (тень) -->
                        <TextBlock.Effect>
                            <DropShadowEffect ShadowDepth="1" Color="{DynamicResource ShadowColor}" Opacity="1"
                                              BlurRadius="0" Direction="225" />
                        </TextBlock.Effect>
                    </TextBlock>
                </Grid>
                <Button.Background>
                    <DynamicResource ResourceKey="ButtonGradient" />
                </Button.Background>
            </Button>
            <Button FontSize="10" BorderThickness="0" Command="{Binding NavigateToPreviousViewCommand}"
                    Height="21" Margin="2,2,2,2"
                    materialDesign:ButtonAssist.CornerRadius="10"
                    Style="{StaticResource MaterialDesignRaisedDarkButton}"
                    Visibility="{Binding IsBackButtonVisible, Converter={StaticResource BoolToHiddenVisibilityConverter}}">
                <Grid>
                    <TextBlock Text="{x:Static res:Strings.Back}" Foreground="{DynamicResource TextBrush}">
                        <!-- Эффект для текста (тень) -->
                        <TextBlock.Effect>
                            <DropShadowEffect ShadowDepth="1" Color="{DynamicResource ShadowColor}" Opacity="1"
                                              BlurRadius="0" Direction="225" />
                        </TextBlock.Effect>
                    </TextBlock>
                </Grid>
                <Button.Background>
                    <DynamicResource ResourceKey="ButtonGradient" />
                </Button.Background>
            </Button>
        </WrapPanel>
        <!-- Контейнер для текста "designed by BOIS" -->
        <DockPanel Margin="2,45,20,2" Grid.Row="3" FlowDirection="RightToLeft">
            <TextBlock DockPanel.Dock="Bottom" FontSize="7" Foreground="{DynamicResource BoisBrush}"
                       Text="designed by BOIS">
            </TextBlock>
        </DockPanel>
    </Grid>
</Window>