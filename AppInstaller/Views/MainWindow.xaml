<Window x:Class="AppInstaller.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:svg="http://sharpvectors.codeplex.com/svgc/"
        xmlns:res="clr-namespace:AppInstaller.Resources"
        xmlns:interactivity="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:converters="clr-namespace:AppInstaller.Converters"
        WindowStyle="None" BorderThickness="1" AllowsTransparency="True"
        mc:Ignorable="d" WindowStartupLocation="CenterScreen"
        Height="538" Width="529" Background="{DynamicResource WindowBackgroundBrush}"
        MouseLeftButtonDown="Window_MouseDown" d:DataContext="{d:DesignInstance }">
    <interactivity:Interaction.Triggers>
        <interactivity:EventTrigger EventName="Closing">
            <interactivity:InvokeCommandAction Command="{Binding CancelCommand}" />
        </interactivity:EventTrigger>
    </interactivity:Interaction.Triggers>
    <!-- Задаем фон окна с градиентом -->
    <!-- Устанавливаем кастомный шаблон для окна -->
    <Window.Template>
        <ControlTemplate TargetType="{x:Type Window}">
            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="15">
                <ContentPresenter />
            </Border>
        </ControlTemplate>
    </Window.Template>
    <Window.Resources>
        <converters:ViewIndexToIconKindConverter x:Key="ViewIndexToIconKindConverter" />
        <!-- Добавляем ресурс для конвертера из bool в Visibility -->
        <converters:BooleanToHiddenVisibilityConverter x:Key="BoolToHiddenVisibilityConverter" />
        <Style TargetType="{x:Type RadioButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Ellipse Fill="{DynamicResource CheckBoxBrush}" Width="12" Height="12" />
                            <materialDesign:PackIcon Kind="Check" Width="12" Height="12"
                                                     Foreground="{DynamicResource TextBrush}"
                                                     Visibility="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, 
                                         Converter={StaticResource BoolToHiddenVisibilityConverter}}" />
                            <ContentPresenter Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,0,0" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <!-- Основной контейнер Grid для компоновки элементов интерфейса -->
    <Grid>
        <Border x:Name="Overlay" Background="#4C000000" Visibility="Collapsed" Panel.ZIndex="1">
            <!-- Используем Clip, чтобы тень не выходила за закругленные края -->
            <Border.Clip>
                <RectangleGeometry Rect="0,0,529,538" RadiusX="15" RadiusY="15"/>
            </Border.Clip>
            <Grid Background="#4C000000">
                <!-- Полупрозрачный черный слой внутри границ с закругленными краями -->
            </Grid>
        </Border>

        <!-- Содержимое основного окна -->
        <Grid Panel.ZIndex="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="30" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Border Grid.Row="0" Background="{DynamicResource ButtonBackgroundBrush}" CornerRadius="15, 15, 0, 0"
                    Margin="0,0,0,0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <!-- Текст заголовка -->
                    <TextBlock Grid.Column="0" Foreground="{DynamicResource TextBrush}" FontSize="14" Margin="15,0,0,0"
                               Text="R.G NITOKIN Installer" VerticalAlignment="Center" FontWeight="Regular" />

                    <!-- Кнопки для закрытия окна и сворачивания -->
                    <StackPanel Grid.Column="1" FlowDirection="RightToLeft" Orientation="Horizontal">
                        <Button Width="20" Height="20" Background="Transparent"
                                Foreground="{DynamicResource TextBrush}"
                                BorderThickness="0" Padding="0" Margin="17,0,0,0"
                                Command="{Binding CancelCommand}">
                            <materialDesign:PackIcon Kind="Close" Width="20" Height="20" />
                        </Button>
                        <Button Width="20" Height="20" Background="Transparent"
                                Foreground="{DynamicResource TextBrush}"
                                BorderThickness="0" Padding="0" Margin="22,0,22,0"
                                Click="MinimizeButton_Click">
                            <materialDesign:PackIcon Kind="Minus" Width="20" Height="20" />
                        </Button>
                        <Button Width="20" Height="20" Background="Transparent"
                                Foreground="{DynamicResource TextBrush}"
                                BorderThickness="0" Padding="0" Margin="0"
                                Click="ToggleTheme" ToolTip="{x:Static res:Strings.DarkLightTheme}">
                            <svg:SvgViewbox Source="{Binding ThemeIconSource}" Width="{Binding ThemeIconWidth}"
                                            Height="{Binding ThemeIconHeight}" />
                        </Button>
                    </StackPanel>
                </Grid>
            </Border>
            <!-- Контейнер для отображения текущего View -->
            <Grid Grid.Row="1">
                <ContentControl Height="430" Width="529" Content="{Binding CurrentView}" />
            </Grid>
            <!-- Контейнер для кнопок FAQ, ссылки на Telegram и ссылки на программу в магазине -->
            <StackPanel Grid.Row="3">
                <WrapPanel Margin="30,21,2,33">
                    <Button Foreground="{DynamicResource TgBrush}" BorderThickness="0"
                            Command="{Binding ShowMessageBoxCommand}"
                            Height="28" Width="28" Margin="0" ToolTip="FAQ by nitokin"
                            materialDesign:ButtonAssist.CornerRadius="10" Padding="0"
                            Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="Transparent">
                        <materialDesign:PackIcon Kind="InformationSlabCircleOutline" Width="28" Height="28"
                                                 Foreground="{DynamicResource TextBrush}" />
                    </Button>
                    <Button BorderThickness="0" Command="{Binding OpenTgLinkCommand}"
                            Height="24" Margin="20,0,20,0" ToolTip="Nitokin Telegram"
                            materialDesign:ButtonAssist.CornerRadius="10" Padding="0"
                            Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="Transparent">
                        <!-- Иконка для Telegram -->
                        <Image>
                            <Image.Source>
                                <svg:SvgImage Source="/Resources/tglogo.svg" />
                            </Image.Source>
                        </Image>
                    </Button>
                    <Button BorderThickness="0" Command="{Binding OpenAppPurchaseLinkCommand}"
                            Height="24" Margin="0" Padding="0"
                            materialDesign:ButtonAssist.CornerRadius="10" ToolTip="{x:Static res:Strings.AppLink}"
                            Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="Transparent">
                        <Image x:Name="AppPurchaseLinkImage" Width="24" Source="{Binding AppPurchaseLinkLogo}" />
                    </Button>
                </WrapPanel>
            </StackPanel>
            <!-- Контейнер для кнопок "Начать/Вперед/Установить/Завершить", "Назад" -->
            <WrapPanel Margin="2,18,30,30" Grid.Row="3" FlowDirection="RightToLeft">
                <Button BorderThickness="0" Command="{Binding CancelCommand}"
                        Height="30" Margin="0" FontWeight="Regular"
                        Background="{DynamicResource ButtonBackgroundBrush}"
                        Style="{StaticResource FlatButtonStyle}" Width="116"
                        Visibility="{Binding IsCancelButtonVisible, Converter={StaticResource BoolToHiddenVisibilityConverter}}">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Bottom">
                        <materialDesign:PackIcon Kind="Close" Width="20" Height="20" VerticalAlignment="Center"
                                                 Margin="15,5,5,5" Foreground="{DynamicResource TextBrush}" />
                        <TextBlock Margin="2" Text="{x:Static res:Strings.Cancel}" FontWeight="Regular" FontSize="14"
                                   Foreground="{DynamicResource TextBrush}" VerticalAlignment="Center"
                                   HorizontalAlignment="Center" Padding="3,2,20,4" />
                    </StackPanel>
                </Button>
                <Button BorderThickness="0" Command="{Binding NavigateToNextViewCommand}"
                        Height="30" Margin="0" FontWeight="Regular"
                        Background="{DynamicResource ButtonBackgroundBrush}"
                        Style="{StaticResource FlatButtonStyle}" Width="{Binding ButtonWidth}"
                        Visibility="{Binding IsNextButtonVisible, Converter={StaticResource BoolToHiddenVisibilityConverter}}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" /> <!-- Иконка -->
                            <ColumnDefinition Width="*" /> <!-- Текст -->
                        </Grid.ColumnDefinitions>
        
                        <!-- Иконка -->
                        <materialDesign:PackIcon Foreground="{DynamicResource TextBrush}"
                                                 Kind="{Binding CurrentViewIndex, Converter={StaticResource ViewIndexToIconKindConverter}}"
                                                 Width="20" Height="20" VerticalAlignment="Center"
                                                 Margin="15,0,5,3" Grid.Column="0" />
                                 
                        <!-- Текст -->
                        <TextBlock Margin="2" Text="{Binding ButtonNextText}" FontWeight="Regular" FontSize="14"
                                   Foreground="{DynamicResource TextBrush}" VerticalAlignment="Center" 
                                   HorizontalAlignment="Left" Padding="3,2,20,4" Grid.Column="1" />
                    </Grid>
                </Button>
                <Button BorderThickness="0" Command="{Binding NavigateToPreviousViewCommand}"
                        Height="30" Width="100" Margin="20,0,0,0" Background="{DynamicResource ButtonBackgroundBrush}"
                        Style="{StaticResource FlatButtonStyle}" FontWeight="Regular"
                        Visibility="{Binding IsBackButtonVisible, Converter={StaticResource BoolToHiddenVisibilityConverter}}">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center"> 
                        <TextBlock Text="{x:Static res:Strings.Back}" Foreground="{DynamicResource TextBrush}" 
                                   FontSize="14" Padding="20,2,3,4" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        <materialDesign:PackIcon Kind="ArrowLeft" Width="20" Height="20" VerticalAlignment="Center"
                                                 Margin="5,5,15,5" Foreground="{DynamicResource TextBrush}" />
                    </StackPanel>
                </Button>
            </WrapPanel>
        </Grid>
    </Grid>
</Window>